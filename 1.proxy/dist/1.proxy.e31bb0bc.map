{"version":3,"sources":["index.js"],"names":["Vue","options","$options","$data","data","observe","render","Object","keys","forEach","key","defineReactive","value","defineProperty","get","set","newValue","element","document","querySelector","el","innerHTML","message","app","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;IACMA;;;AACJ,eAAYC,OAAZ,EAAqB;AAAA;;AACnB,SAAKC,QAAL,GAAgBD,OAAhB;AACA,SAAKE,KAAL,GAAaF,OAAO,CAACG,IAArB;AACA,SAAKC,OAAL,CAAaJ,OAAO,CAACG,IAArB;AACA,SAAKE,MAAL;AACD;;;;4BACOF,MAAM;AAAA;;AACZ,UAAI,CAACA,IAAD,IAAS,QAAOA,IAAP,MAAgB,QAA7B,EAAuC;AACrC;AACD;;AACDG,MAAAA,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EAAkBK,OAAlB,CAA0B,UAACC,GAAD,EAAS;AACjC,QAAA,KAAI,CAACC,cAAL,CAAoBP,IAApB,EAA0BM,GAA1B,EAA+BN,IAAI,CAACM,GAAD,CAAnC;AACD,OAFD;AAGD;;;mCACcN,MAAMM,KAAKE,OAAO;AAC/B,WAAKP,OAAL,CAAaO,KAAb,EAD+B,CACX;;AACpBL,MAAAA,MAAM,CAACM,cAAP,CAAsB,IAAtB,EAA4BH,GAA5B,EAAiC;AAC/BI,QAAAA,GAD+B,iBACzB;AACJ,iBAAOF,KAAP;AACD,SAH8B;AAI/BG,QAAAA,GAJ+B,eAI3BC,QAJ2B,EAIjB;AACZJ,UAAAA,KAAK,GAAGI,QAAR;AACA,eAAKV,MAAL;AACD;AAP8B,OAAjC;AASD;;;6BACQ;AACP,UAAMW,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAKjB,QAAL,CAAckB,EAArC,CAAhB;AACAH,MAAAA,OAAO,CAACI,SAAR,GAAoB,KAAKC,OAAzB;AACD;;;;;;AAGH,IAAIC,GAAG,GAAG,IAAIvB,GAAJ,CAAQ;AAChBoB,EAAAA,EAAE,EAAE,MADY;AAEhBhB,EAAAA,IAAI,EAAE;AACJkB,IAAAA,OAAO,EAAE;AADL;AAFU,CAAR,CAAV;AAOAE,OAAO,CAACC,GAAR,CAAYF,GAAZ,GAEA;;AACAA,GAAG,CAACD,OAAJ,GAAc,cAAd,EACA","file":"1.proxy.e31bb0bc.map","sourceRoot":"..","sourcesContent":["// 声明式渲染\n// 这个实现的是声明式渲染\nclass Vue {\n  constructor(options) {\n    this.$options = options;\n    this.$data = options.data;\n    this.observe(options.data);\n    this.render();\n  }\n  observe(data) {\n    if (!data || typeof data !== 'object') {\n      return\n    }\n    Object.keys(data).forEach((key) => {\n      this.defineReactive(data, key, data[key])\n    })\n  }\n  defineReactive(data, key, value) {\n    this.observe(value) //监听子属性\n    Object.defineProperty(this, key, {\n      get() {\n        return value;\n      },\n      set(newValue) {\n        value = newValue;\n        this.render()\n      }\n    })\n  }\n  render() {\n    const element = document.querySelector(this.$options.el);\n    element.innerHTML = this.message;\n  }\n}\n\nvar app = new Vue({\n  el: '#app',\n  data: {\n    message: 'Hello Vue!'\n  }\n})\n\nconsole.log(app);\n\n// debugger\napp.message = 'hello change'\n// app.message 改变的就是data对象，也就是将data对象里面的属性挂载到实例上面"]}